import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class myMapper   extends Mapper<LongWritable, Text, Text, IntWritable>{

    private final static IntWritable one = new IntWritable(1);
    private Text word = new Text();
    private static final int MISSING = 9999;
    public void map(LongWritable key, Text value, Context context
                    ) throws IOException, InterruptedException {
    	
    	 String line = value.toString();
    	 String year = line.substring(15,19);
    	 
    	 int temp = Integer.parseInt(line.substring(87,92));
    	 if (line.charAt(87)=='+')
    	 {
    		 temp=Integer.parseInt(line.substring(88,92));
    	 }
    	 if (line.charAt(87)=='-')
    	 {
    		 temp=Integer.parseInt(line.substring(87,92));
    	 }
    	 String quality = line.substring(92, 93);
    	 if (temp!= MISSING&& quality.matches("[01459]"))
    	 {
    	 context.write(new Text(year), new IntWritable(temp));
    	 }
    	 
    	 }
    
  }
